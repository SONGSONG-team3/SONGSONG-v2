<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.songsong.music.user.dao.UserDao">
    <insert id="registerUser" parameterType="com.songsong.music.user.dto.UserDto" useGeneratedKeys="true" keyProperty="userNo">
        INSERT INTO user (user_name, user_password, user_email, user_nickname, user_image, user_register_date)
        VALUES (#{userName}, #{userPassword}, #{userEmail}, #{userNickname}, #{userImage}, now())
    </insert>

    <insert id="insertUserCategories" parameterType="com.songsong.music.user.dto.UserSignupRequest">
        INSERT INTO user_category (user_no, category_id)
        VALUES
        <foreach collection="categories" item="category" separator=",">
            (#{userDto.userNo}, #{category})
        </foreach>
    </insert>

    <!-- 회원가입시 이메일, 닉네임 중복 체크 -->
    <select id="checkEmailExists" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE user_email = #{email}
    </select>

    <select id="checkNicknameExists" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE user_nickname = #{nickname}
    </select>

    <!-- 마이페이지-->

    <select id="getUserById" resultType="com.songsong.music.user.dto.UserDto" parameterType="int">
        SELECT u.user_no, u.user_name, u.user_email, u.user_password, u.user_nickname
        FROM user u
        WHERE u.user_no = #{userNo}
    </select>

    <select id="getUserCategories" resultType="com.songsong.music.user.dto.UserCategoryDto" parameterType="int">
        SELECT uc.user_no, uc.category_id
        FROM user_category uc
        WHERE uc.user_no = #{userNo}
    </select>

    <update id="updateUserMypage" parameterType="com.songsong.music.user.dto.UserDto">
        UPDATE user
        <set>
            <if test="userPassword != null">
                user_password = #{userPassword},
            </if>
            user_nickname = #{userNickname}
        </set>
        WHERE user_no = #{userNo}
    </update>

    <!-- 해당 User 기존 category 전부 삭제 후 새로 추가-->
    <delete id="deleteUserCategory"  parameterType="int" >
        delete from user_category
        where user_no = #{userNo}
    </delete>

    <insert id="insertUserCategory"  parameterType="com.songsong.music.user.dto.UserCategoryDto" >
        insert into user_category (user_no, category_id)
        values ( #{userNo}, #{categoryId} )
    </insert>


    <!-- 사용자 정보 가져오기 -->
    <select id="selectUserById" resultType="com.songsong.music.user.dto.UserDto">
        SELECT user_no userNo, user_nickname userNickname, user_image userImage, user_like userLike
        FROM user
        WHERE user_no = #{userNo}
    </select>

    <!-- 사용자의 곡 수 가져오기 -->
    <select id="getSongCountByUser" resultType="int">
        SELECT COUNT(*) FROM playlist WHERE user_no = #{userNo}
    </select>

    <!-- 사용자의 좋아요 수 가져오기(지금까지 반영된 좋아요) -->
    <select id="getUserLikeCount" parameterType="int" resultType="int">
        SELECT user_like
        FROM user
        WHERE user_no = #{userNo}
    </select>

    <!-- 사용자 좋아요 수 증가 -->
    <update id="incrementUserLike" parameterType="int">
        UPDATE user
        SET user_like = user_like + 1
        WHERE user_no = #{userNo}
    </update>

    <!-- 사용자 좋아요 수 감소 -->
    <update id="decrementUserLike" parameterType="int">
        UPDATE user
        SET user_like = user_like - 1
        WHERE user_no = #{userNo}
    </update>


</mapper>
